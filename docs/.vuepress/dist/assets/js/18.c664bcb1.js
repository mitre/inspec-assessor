(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{434:function(e,t,n){"use strict";n.r(t);var s=n(62),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"_6-example-running-an-inspec-profile-directly-from-github"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-example-running-an-inspec-profile-directly-from-github"}},[e._v("#")]),e._v(" 6. Example running an InSpec profile directly from Github")]),e._v(" "),n("h3",{attrs:{id:"_6-1-running-baseline-straight-from-github-chef-supermarket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-running-baseline-straight-from-github-chef-supermarket"}},[e._v("#")]),e._v(" 6.1. Running baseline straight from Github/Chef Supermarket")]),e._v(" "),n("p",[e._v("In this module, we use NGINX for learning purposes. If you're interested in NGINX specifically, you may be interested in the "),n("a",{attrs:{href:"https://github.com/mitre/nginx-baseline",target:"_blank",rel:"noopener noreferrer"}},[e._v("MITRE nginx-baseline"),n("OutboundLink")],1),e._v(" profile on GitHub. Alternatively, you may also check out the "),n("a",{attrs:{href:"https://supermarket.chef.io/tools/nginx-baseline",target:"_blank",rel:"noopener noreferrer"}},[e._v("DevSec Nginx Baseline"),n("OutboundLink")],1),e._v(" profile on Chef Supermarket. These profiles implements many of the tests you wrote in this module.")]),e._v(" "),n("p",[e._v("To execute the GitHub profile on your target system, run this "),n("code",[e._v("inspec exec")]),e._v(" command.")]),e._v(" "),n("p",[n("code",[e._v("$ inspec exec https://github.com/dev-sec/nginx-baseline -t docker://nginx")])]),e._v(" "),n("p",[e._v("To execute the Chef Supermarket profile on your target system, run this "),n("code",[e._v("inspec supermarket exec")]),e._v(" command.")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('$ inspec supermarket exec dev-sec/nginx-baseline -t docker://nginx\n  [2018-05-03T03:07:51+00:00] WARN: URL target https://github.com/dev-sec/nginx-baseline transformed to https://github.com/dev-sec/nginx-baseline/archive/master.tar.gz. Consider using the git fetcher\n\n  Profile: DevSec Nginx Baseline (nginx-baseline)\n  Version: 2.1.0\n  Target:  docker://nginx\n\n    ...\n    ×  nginx-02: Check NGINX config file owner, group and permissions. (1 failed)\n       ...\n       ×  File /etc/nginx/nginx.conf should not be readable by others\n       expected File /etc/nginx/nginx.conf not to be readable by others\n       ...\n       ↺  nginx-15: Content-Security-Policy\n          ↺  Can\'t find file "/etc/nginx/conf.d/90.hardening.conf"\n       ↺  nginx-16: Set cookie with HttpOnly and Secure flag\n          ↺  Can\'t find file "/etc/nginx/conf.d/90.hardening.conf"\n\n\n     Profile Summary: 2 successful controls, 7 control failures, 7 controls skipped\n     Test Summary: 10 successful, 13 failures, 10 skipped\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br")])]),n("p",[e._v("You see that many of the tests pass, while others fail and may require investigation.")]),e._v(" "),n("p",[e._v("You may want to extend the "),n("code",[e._v("nginx-baseline")]),e._v(" with your own custom requirements. To do that, you might use what's called a "),n("em",[e._v("wrapper profile")]),e._v(". You can check out "),n("a",{attrs:{href:"https://learn.chef.io/modules/create-a-custom-profile#/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create a custom InSpec profile"),n("OutboundLink")],1),e._v(" for a more complete example.")]),e._v(" "),n("h3",{attrs:{id:"_6-2-viewing-and-analyzing-results"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-viewing-and-analyzing-results"}},[e._v("#")]),e._v(" 6.2. Viewing and Analyzing Results")]),e._v(" "),n("p",[e._v("InSpec allows you to output your test results to one or more reporters. You can configure the reporter(s) using either the --json-config option or the --reporter option. While you can configure multiple reporters to write to different files, only one reporter can output to the screen(stdout).")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("$ inspec exec /root/my_nginx -t ssh://TARGET_USERNAME:TARGET_PASSWORD@TARGET_IP --reporter cli json:baseline_output.json\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h4",{attrs:{id:"_6-2-1-syntax"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-syntax"}},[e._v("#")]),e._v(" 6.2.1. Syntax")]),e._v(" "),n("p",[e._v("You can specify one or more reporters using the --reporter cli flag. You can also specify a output by appending a path separated by a colon.")]),e._v(" "),n("p",[e._v("Output json to screen.")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("inspec exec /root/my_nginx --reporter json\nor\ninspec exec /root/my_nginx --reporter json:-\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("Output yaml to screen")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("inspec exec /root/my_nginx --reporter yaml\nor\ninspec exec /root/my_nginx --reporter yaml:-\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("Output cli to screen and write json to a file.")]),e._v(" "),n("p",[n("code",[e._v("inspec exec /root/my_nginx --reporter cli json:/tmp/output.json")])]),e._v(" "),n("p",[e._v("Output nothing to screen and write junit and html to a file.")]),e._v(" "),n("p",[n("code",[e._v("inspec exec /root/my_nginx --reporter junit:/tmp/junit.xml html:www/index.html")])]),e._v(" "),n("p",[e._v("Output json to screen and write to a file. Write junit to a file.")]),e._v(" "),n("p",[n("code",[e._v("inspec exec /root/my_nginx --reporter json junit:/tmp/junit.xml | tee out.json")])]),e._v(" "),n("p",[e._v("If you wish to pass the profiles directly after specifying the reporters you will need to use the end of options flag --.")]),e._v(" "),n("p",[n("code",[e._v("inspec exec --reporter json junit:/tmp/junit.xml -- profile1 profile2")])]),e._v(" "),n("p",[e._v("Output cli to screen and write json to a file.")]),e._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"reporter"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"cli"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"stdout"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"json"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"file"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/tmp/output.json"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),n("span",{pre:!0,attrs:{class:"token property"}},[e._v('"stdout"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])]),n("h4",{attrs:{id:"_6-2-2-supported-reporters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-supported-reporters"}},[e._v("#")]),e._v(" 6.2.2. Supported Reporters")]),e._v(" "),n("p",[e._v("The following are the current supported reporters:")]),e._v(" "),n("ul",[n("li",[e._v("cli")]),e._v(" "),n("li",[e._v("json")]),e._v(" "),n("li",[e._v("json-min")]),e._v(" "),n("li",[e._v("yaml")]),e._v(" "),n("li",[e._v("documentation")]),e._v(" "),n("li",[e._v("junit")]),e._v(" "),n("li",[e._v("progress")]),e._v(" "),n("li",[e._v("json-rspec")]),e._v(" "),n("li",[e._v("html")])]),e._v(" "),n("p",[e._v("You can read more about "),n("a",{attrs:{href:"https://www.inspec.io/docs/reference/reporters/",target:"_blank",rel:"noopener noreferrer"}},[e._v("InSpec Reporters"),n("OutboundLink")],1),e._v(" on the documentation page.")]),e._v(" "),n("h4",{attrs:{id:"_6-2-3-putting-it-all-together"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-3-putting-it-all-together"}},[e._v("#")]),e._v(" 6.2.3. Putting it all together")]),e._v(" "),n("p",[e._v("The following command will run the nginx baseline profile from github and use the reporter to output a json, you will need this for the next step loading it into heimdall:")]),e._v(" "),n("p",[n("code",[e._v("$ inspec exec https://github.com/dev-sec/nginx-baseline -t ssh://TARGET_USERNAME:TARGET_PASSWORD@TARGET_IP --reporter cli json:baseline_output.json")])])])}),[],!1,null,null,null);t.default=r.exports}}]);