(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{438:function(t,e,s){"use strict";s.r(e);var n=s(62),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_5-viewing-and-analyzing-results"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-viewing-and-analyzing-results"}},[t._v("#")]),t._v(" 5. Viewing and Analyzing Results")]),t._v(" "),s("p",[t._v("InSpec allows you to output your test results to one or more reporters. You can configure the reporter(s) using either the --json-config option or the --reporter option. While you can configure multiple reporters to write to different files, only one reporter can output to the screen(stdout).")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ inspec exec /root/my_nginx -t ssh://TARGET_USERNAME:TARGET_PASSWORD@TARGET_IP --reporter cli json:baseline_output.json\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_5-1-syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-syntax"}},[t._v("#")]),t._v(" 5.1. Syntax")]),t._v(" "),s("p",[t._v("You can specify one or more reporters using the --reporter cli flag. You can also specify a output by appending a path separated by a colon.")]),t._v(" "),s("p",[t._v("Output json to screen.")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("inspec exec /root/my_nginx --reporter json\nor\ninspec exec /root/my_nginx --reporter json:-\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("Output yaml to screen")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("inspec exec /root/my_nginx --reporter yaml\nor\ninspec exec /root/my_nginx --reporter yaml:-\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("Output cli to screen and write json to a file.")]),t._v(" "),s("p",[s("code",[t._v("inspec exec /root/my_nginx --reporter cli json:/tmp/output.json")])]),t._v(" "),s("p",[t._v("Output nothing to screen and write junit and html to a file.")]),t._v(" "),s("p",[s("code",[t._v("inspec exec /root/my_nginx --reporter junit:/tmp/junit.xml html:www/index.html")])]),t._v(" "),s("p",[t._v("Output json to screen and write to a file. Write junit to a file.")]),t._v(" "),s("p",[s("code",[t._v("inspec exec /root/my_nginx --reporter json junit:/tmp/junit.xml | tee out.json")])]),t._v(" "),s("p",[t._v("If you wish to pass the profiles directly after specifying the reporters you will need to use the end of options flag --.")]),t._v(" "),s("p",[s("code",[t._v("inspec exec --reporter json junit:/tmp/junit.xml -- profile1 profile2")])]),t._v(" "),s("p",[t._v("Output cli to screen and write json to a file.")]),t._v(" "),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"reporter"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cli"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stdout"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"json"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"file"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/output.json"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stdout"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:"_5-2-supported-reporters"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-supported-reporters"}},[t._v("#")]),t._v(" 5.2. Supported Reporters")]),t._v(" "),s("p",[t._v("The following are the current supported reporters:")]),t._v(" "),s("ul",[s("li",[t._v("cli")]),t._v(" "),s("li",[t._v("json")]),t._v(" "),s("li",[t._v("json-min")]),t._v(" "),s("li",[t._v("yaml")]),t._v(" "),s("li",[t._v("documentation")]),t._v(" "),s("li",[t._v("junit")]),t._v(" "),s("li",[t._v("progress")]),t._v(" "),s("li",[t._v("json-rspec")]),t._v(" "),s("li",[t._v("html")])]),t._v(" "),s("p",[t._v("You can read more about "),s("a",{attrs:{href:"https://www.inspec.io/docs/reference/reporters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("InSpec Reporters"),s("OutboundLink")],1),t._v(" on the documentation page.")]),t._v(" "),s("h3",{attrs:{id:"_5-3-putting-it-all-together"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-putting-it-all-together"}},[t._v("#")]),t._v(" 5.3. Putting it all together")]),t._v(" "),s("p",[t._v("The following command will run the nginx baseline profile from github and use the reporter to output a json, you will need this for the next step loading it into heimdall:")]),t._v(" "),s("p",[s("code",[t._v("$ inspec exec https://github.com/dev-sec/nginx-baseline -t ssh://TARGET_USERNAME:TARGET_PASSWORD@TARGET_IP --reporter cli json:baseline_output.json")])])])}),[],!1,null,null,null);e.default=r.exports}}]);